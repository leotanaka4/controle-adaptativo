clc; close all; 
%clear; 

%% ======= Escolher Ordem do Sistema =======
n = 3;  % ordem da planta e do modelo
reset = 0; % resetar a planta / usar a que já foi criada

%% ======= Inicialization =======
gamma = eye(n);
tfinal = 200;    %Simulation interval
st = 0.01;      %Sample time to workspace

%% ======= Reference signal parameters =======
DC = 1   %Constant
Aq = 2   %Sine wave amplitude
wq = 0.1*pi  %Frequency
As = 0   %Square wave amplitude
% As = 0.5
ws = pi  %Frequency


%% ======= Gerar Planta =======
if reset
    % Polos da planta (podem ser instáveis)
    plant_polos = randi([-3, 10], 1, n);           % polos arbitrários
    plant_den = poly(plant_polos);

    % Zeros reais negativos para numerador (mínima fase)
    plant_zeros = -randi([1, 5], 1, n-1);         % zeros reais negativos

    plant_num = (2 + rand()) * poly(plant_zeros);  % numerador grau n-1

    P = tf(plant_num, plant_den);
    x0 = zeros(n, 1);
end
%% ======= Gerar Modelo SPR com polos e zeros alternados =======

% Passo 1: gerar polos reais negativos crescentes
pole_spacing = 2.0;
poles_M = sort(-1 * (1:pole_spacing:n*pole_spacing) );

% Passo 2: gerar zeros entre os polos (alternados)
zeros_M = zeros(1, n-1);
for i = 1:n-1
    zeros_M(i) = (poles_M(i) + poles_M(i+1)) / 2;  % entre dois polos
end

% Polinômios
den_M = poly(poles_M);
num_M = poly(zeros_M);

% Ganho positivo arbitrário
km = 1 + rand();
num_M = km * num_M;

M = tf(num_M, den_M);  % Modelo SPR garantido
xm0 = zeros(n,1);

%% Polinômio do Observador
A0 = 1; 

%% Rodar cálculo dos parâmetros ideais
%[theta1, theta_n, theta2, theta_2n] = controle2DOF(P, M, A0);

%% ======= Definir Filtro =======
% Grau da planta (denominador de P)
nf = n - 1;                 % grau do filtro

% Definir coeficientes do denominador do filtro (escolha arbitrária estável)
% Exemplo: filtro com polos em -2, -3, ..., arbitrário mas estável
filtro_polos = -2:-1:-(nf+1);                % nf polos reais negativos
den_filtro = poly(filtro_polos);            % coeficientes do denominador

% Forma canônica controlável
Af = zeros(nf); Af(1:nf-1, 2:nf) = eye(nf-1); Af(end, :) = -den_filtro(2:end);
Bf = zeros(nf,1); Bf(end) = 1; 


%% ======= Simulation =======
sim('MRAC_generalizado',tfinal);

yp1 = yp;   %Save results
ea1 = ea;
theta1 = theta;
u1 = u;

